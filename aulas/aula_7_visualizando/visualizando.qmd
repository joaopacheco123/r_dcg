---
title: "Visualizando dados e modelando em R"
format:
  html: default
  pdf: default
editor: visual
---

# Objetivo da aula

Introduzi-los à visualização de dados usando a linguagem R, apresentando a função plot() para criar diferentes tipos de gráficos. Além disso, abordaremos conceitos básicos de estatística inferencial e como modelar a relação entre duas variáveis.

# Tópicos da aula

1.  Introdução à visualização de dados

    1.  Importância da visualização na análise de dados

2.  Tipos de gráficos disponíveis em R

    1.  A função plot() em R

    2.  Sintaxe básica do plot()

    3.  Gráfico de dispersão (scatter plot)

    4.  Gráfico de linha (line plot)

    5.  Gráfico de barras (bar plot)

    6.  Gráfico de pizza (pie plot)

    7.  Gráfico de boxplot (box plot)

3.  Estatística inferencial básica

    1.  Conceitos fundamentais da estatística inferencial

    2.  População e amostra

    3.  Média, mediana e moda

    4.  Desvio padrão e variância

    5.  Intervalo de confiança

    6.  Teste de hipóteses (introdução)

4.  Modelando a relação entre duas variáveis

    1.  Regressão linear simples

    2.  Coeficiente de correlação

    3.  Interpretação dos resultados da regressão

    4.  Exemplos práticos de modelagem

5.  Lista de exercícios

    1.  Resolução de problemas práticos utilizando

    2.  Aplicação dos conhecimentos adquiridos em visualização e modelagem

Essa estrutura deve fornecer uma introdução sólida sobre a visualização de dados no R, a função plot() e como modelar a relação entre duas variáveis usando técnicas de estatística inferencial. A lista de exercícios é importante para consolidar o conhecimento adquirido e permitir que vocês pratiquem suas habilidades em R.

# Introdução à visualização de dados

A visualização de dados é uma etapa crucial na análise de informações em qualquer projeto de ciência de dados ou pesquisa. Por meio de gráficos e plots, podemos transformar dados brutos em representações visuais compreensíveis, o que facilita a identificação de padrões, tendências e insights importantes. A visualização não apenas torna os dados mais acessíveis, mas também auxilia na comunicação efetiva dos resultados para uma audiência diversa.

## Importância da visualização na análise de dados

A visualização de dados desempenha um papel fundamental nos seguintes aspectos:

### a) Identificação de padrões e tendências

Visualizar dados permite que você identifique rapidamente padrões e tendências que podem não ser aparentes ao examinar apenas as tabelas de números. Através de gráficos, podemos detectar relações entre variáveis, sazonalidades e outros comportamentos relevantes.

### b) Comunicação eficaz

Gráficos e plots facilitam a comunicação dos resultados e insights para um público não técnico. As representações visuais são mais fáceis de serem compreendidas e podem tornar a análise de dados mais acessível a pessoas com diferentes níveis de conhecimento em estatística e ciência de dados.

### c) Tomada de decisão embasada

Com dados visualizados de forma adequada, tomadores de decisão podem basear suas escolhas em evidências concretas. Gráficos bem elaborados fornecem informações claras e confiáveis, auxiliando na formulação de estratégias e soluções.

# Tipos de gráficos disponíveis em R

O R oferece uma ampla variedade de pacotes e funções para a criação de gráficos e plots. Nesta aula, exploraremos alguns dos principais tipos de gráficos disponíveis usando a função `plot()`.

## Sintaxe básica do plot()

Antes de criarmos os diferentes tipos de gráficos, é importante entender a sintaxe básica da função `plot()` em R. A função `plot()` é utilizada para produzir gráficos simples e geralmente aceita argumentos como os valores das variáveis que queremos plotar, além de parâmetros adicionais para personalizar a aparência do gráfico.

Aqui está a sintaxe básica da função `plot()`:

```         
RCopy code
```

`plot(x, y, type = "p", col = "blue", main = "Título do Gráfico", xlab = "Rótulo do Eixo X", ylab = "Rótulo do Eixo Y")`

-   `x`: Vetor de valores para o eixo x.

-   `y`: Vetor de valores para o eixo y.

-   `type`: Tipo de gráfico. Pode ser "p" (pontos), "l" (linha), "b" (pontos e linha), "h" (histograma) e outros.

-   `col`: Cor do gráfico.

-   `main`: Título do gráfico.

-   `xlab`: Rótulo do eixo x.

-   `ylab`: Rótulo do eixo y.

Agora, vamos criar diferentes tipos de gráficos usando a função `plot()`:

## Gráfico de dispersão (scatter plot)

O gráfico de dispersão é usado para exibir a relação entre duas variáveis numéricas. Cada ponto no gráfico representa uma observação com os valores correspondentes das duas variáveis. É útil para identificar a correlação entre as variáveis.

```         
RCopy code
```

`# Exemplo de gráfico de dispersão x <- c(1, 2, 3, 4, 5) y <- c(3, 5, 4, 6, 8) plot(x, y, main = "Gráfico de Dispersão", xlab = "Variável X", ylab = "Variável Y", pch = 16, col = "blue")`

## Gráfico de linha (line plot)

O gráfico de linha é utilizado para mostrar a evolução de uma variável ao longo do tempo ou de outro eixo contínuo. É útil para destacar tendências e mudanças ao longo de uma série temporal.

```         
RCopy code
```

`# Exemplo de gráfico de linha x <- c(1, 2, 3, 4, 5) y <- c(3, 5, 4, 6, 8) plot(x, y, type = "l", main = "Gráfico de Linha", xlab = "Tempo", ylab = "Valores", col = "red")`

## Gráfico de barras (bar plot)

O gráfico de barras é uma representação visual de dados categóricos. Cada barra representa uma categoria e a altura da barra representa a quantidade ou frequência dessa categoria.

```         
RCopy code
```

`# Exemplo de gráfico de barras categorias <- c("A", "B", "C", "D") valores <- c(10, 15, 8, 12) barplot(valores, names.arg = categorias, main = "Gráfico de Barras", xlab = "Categorias", ylab = "Valores", col = "green")`

## Gráfico de pizza (pie plot)

O gráfico de pizza é outra forma de representar dados categóricos. As fatias da pizza representam as categorias e suas proporções em relação ao todo.

```         
RCopy code
```

`# Exemplo de gráfico de pizza categorias <- c("A", "B", "C", "D") valores <- c(25, 15, 30, 20) pie(valores, labels = categorias, main = "Gráfico de Pizza", col = c("red", "blue", "green", "orange"))`

## Gráfico de boxplot (box plot)

O gráfico de boxplot é utilizado para representar a distribuição de dados numéricos e identificar valores atípicos. É útil para comparar diferentes grupos ou variáveis.

```         
RCopy code
```

`# Exemplo de gráfico de boxplot grupo1 <- c(10, 15, 20, 25, 30) grupo2 <- c(5, 8, 12, 18, 24) boxplot(grupo1, grupo2, names = c("Grupo 1", "Grupo 2"), main = "Gráfico de Boxplot", col = c("blue", "green"))`

# Estatística inferencial básica

A estatística inferencial é uma área da estatística que visa fazer inferências e tirar conclusões sobre uma população com base em uma amostra de dados coletados. Nesta parte da aula, iremos abordar os conceitos fundamentais da estatística inferencial e algumas das principais técnicas utilizadas.

## Conceitos fundamentais da estatística inferencial

Na estatística inferencial, trabalhamos com incerteza, pois estamos usando uma amostra para tentar entender uma população maior. Para isso, utilizamos técnicas estatísticas para fazer inferências sobre os parâmetros populacionais com base nos dados da amostra.

## População e amostra

-   População: É o conjunto completo de todos os elementos que estamos interessados em estudar e obter conclusões. Representa o grupo total que desejamos analisar, mas nem sempre é possível examinar toda a população devido a restrições de tempo, recursos ou praticidade.

-   Amostra: É uma parte representativa da população, selecionada para estudo e análise. A amostra deve ser escolhida de forma aleatória e representar, de maneira precisa, as características da população.

## Média, mediana e moda

-   Média: É a soma de todos os valores dividida pelo número total de observações. É a medida de tendência central mais comumente utilizada e pode ser influenciada por valores extremos (outliers).

```         
RCopy code
```

`# Exemplo de cálculo da média dados <- c(10, 15, 12, 8, 20) media <- mean(dados) media`

-   Mediana: É o valor que separa a metade inferior e a metade superior de um conjunto de dados ordenados. É menos sensível a valores extremos do que a média.

```         
RCopy code
```

`# Exemplo de cálculo da mediana dados <- c(10, 15, 12, 8, 20) mediana <- median(dados) mediana`

-   Moda: É o valor que ocorre com maior frequência em um conjunto de dados.

```         
RCopy code
```

`# Exemplo de cálculo da moda dados <- c(10, 15, 12, 8, 20, 15, 12) moda <- table(dados) moda <- as.numeric(names(moda)[moda == max(moda)]) moda`

## Desvio padrão e variância

-   Desvio padrão: É uma medida de dispersão que indica o quanto os valores do conjunto de dados se afastam da média. Quanto maior o desvio padrão, mais dispersos estão os dados.

```         
RCopy code
```

`# Exemplo de cálculo do desvio padrão dados <- c(10, 15, 12, 8, 20) desvio_padrao <- sd(dados) desvio_padrao`

-   Variância: É outra medida de dispersão que indica a média dos quadrados dos desvios em relação à média. É o quadrado do desvio padrão.

```         
RCopy code
```

`# Exemplo de cálculo da variância dados <- c(10, 15, 12, 8, 20) variancia <- var(dados) variancia`

## Intervalo de confiança

O intervalo de confiança é uma estimativa estatística que fornece um intervalo de valores plausíveis para um parâmetro populacional com base nos dados da amostra. É uma forma de expressar a incerteza associada à estimativa do parâmetro.

```         
RCopy code
```

`# Exemplo de cálculo do intervalo de confiança para a média dados <- c(10, 15, 12, 8, 20) intervalo_confianca <- t.test(dados)$conf.int intervalo_confianca`

## Teste de hipóteses

O teste de hipóteses é uma técnica estatística usada para tomar decisões sobre uma afirmação ou hipótese relacionada a um parâmetro populacional. Consiste em formular duas hipóteses, uma hipótese nula (H0) e uma hipótese alternativa (Ha), e utilizar dados da amostra para determinar se há evidências suficientes para rejeitar a hipótese nula em favor da hipótese alternativa.

```         
RCopy code
```

`# Exemplo de teste de hipóteses para a média dados <- c(10, 15, 12, 8, 20) teste_hipotese <- t.test(dados, mu = 13) teste_hipotese`

Nesta parte da aula, aprendemos conceitos fundamentais da estatística inferencial, como população e amostra, medidas de tendência central (média, mediana e moda), medidas de dispersão (desvio padrão e variância), intervalo de confiança e introdução ao teste de hipóteses. Esses conceitos são essenciais para a interpretação e análise de dados, bem como para as próximas etapas de modelagem.

# Modelando a relação entre duas variáveis

Nesta parte da aula, abordaremos técnicas de modelagem que nos permitirão entender e quantificar a relação entre duas variáveis. A modelagem é uma ferramenta poderosa na análise de dados, pois nos permite fazer previsões e inferências com base nos padrões identificados.

## Regressão linear simples

A regressão linear simples é uma técnica estatística que busca modelar a relação entre duas variáveis quantitativas: uma variável independente (X) e uma variável dependente (Y). A regressão linear procura encontrar a melhor reta que se ajusta aos pontos no gráfico de dispersão, minimizando a soma dos erros quadráticos. A equação da regressão linear é dada por:

$$
Y=β0​+β1​⋅X+ε
$$

Onde:

-   𝑌 é a variável dependente;

-   𝑋 é a variável independente;

-   β0​ é o intercepto (ponto em que a reta cruza o eixo Y);

-   β1​ é o coeficiente de inclinação (representa a variação em 𝑌 associada a uma unidade de variação em 𝑋);

-   ε é o erro aleatório.

```{r}
# Exemplo de regressão linear simples 
x <- c(1, 2, 3, 4, 5) 
y <- c(3, 5, 4, 6, 8) 
modelo <- lm(y ~ x) 
summary(modelo)
```

Interpretação do resultado do modelo:

O modelo de regressão linear obtido foi:

�=1.900+1.100⋅�+�Y=1.900+1.100⋅X+ε

Aqui estão os principais aspectos a serem observados na saída do modelo:

1.  Coeficientes:

    -   Intercepto (�0β0​): O valor do intercepto é 1.900. Isso significa que quando a variável independente (�X) é igual a zero, o valor estimado da variável dependente (�Y) é 1.900.

    -   Coeficiente de inclinação (�1β1​): O valor do coeficiente de inclinação é 1.100. Isso indica que, para cada unidade de aumento em �X, espera-se um aumento de 1.100 em �Y.

2.  Teste de hipóteses:

    -   Para o intercepto (�0β0​): O valor p (Pr(\>\|t\|)) associado ao intercepto é 0.1522. Como esse valor é maior que 0.05, não temos evidências suficientes para rejeitar a hipótese nula de que o intercepto é igual a zero.

    -   Para o coeficiente de inclinação (�1β1​): O valor p (Pr(\>\|t\|)) associado ao coeficiente de inclinação é 0.0351. Como esse valor é menor que 0.05, temos evidências estatisticamente significativas para rejeitar a hipótese nula de que o coeficiente de inclinação é igual a zero. Isso indica que o coeficiente de inclinação é significativamente diferente de zero, ou seja, a variável independente (�X) tem um efeito significativo na variável dependente (�Y).

3.  Coeficiente de determinação (R-quadrado):

    -   O coeficiente de determinação (�2R2) é igual a 0.8176, o que significa que aproximadamente 81.76% da variação em �Y é explicada pela variação em �X. Isso indica que o modelo de regressão linear explica bem os dados e a relação entre as duas variáveis.

4.  Residual standard error:

    -   O residual standard error é igual a 0.9487, que representa o desvio padrão dos resíduos (diferença entre os valores observados e os valores estimados pelo modelo). Quanto menor esse valor, melhor o ajuste do modelo aos dados.

Em resumo, o modelo de regressão linear indica que existe uma relação significativa entre as variáveis �X e �Y, onde �Y aumenta em média 1.100 unidades para cada unidade de aumento em �X. O modelo explica cerca de 81.76% da variação observada em �Y. O intercepto não é estatisticamente significativo, o que significa que não há evidências suficientes para afirmar que o valor de �Y é diferente de zero quando �X é igual a zero. No entanto, o coeficiente de inclinação é estatisticamente significativo, indicando que �X tem um efeito significativo em �Y.

## Coeficiente de correlação

O coeficiente de correlação (r) é uma medida que quantifica a força e a direção da relação linear entre duas variáveis quantitativas. O coeficiente de correlação varia entre -1 e 1. Um valor próximo de 1 indica uma forte correlação positiva, um valor próximo de -1 indica uma forte correlação negativa e um valor próximo de 0 indica uma correlação fraca ou inexistente.

```         
RCopy code
```

`# Exemplo de cálculo do coeficiente de correlação x <- c(1, 2, 3, 4, 5) y <- c(3, 5, 4, 6, 8) correlacao <- cor(x, y) correlacao`

## Interpretação dos resultados da regressão

Ao realizar uma análise de regressão, é importante interpretar os resultados obtidos. O resumo do modelo nos fornece informações sobre os coeficientes estimados, o coeficiente de determinação (�2R2) e outras estatísticas relevantes. A interpretação dos resultados nos ajuda a compreender a relação entre as variáveis e a avaliar a qualidade do modelo.

## Exemplos práticos de modelagem

Agora, vamos aplicar a regressão linear a um conjunto de dados real e fazer a análise de um modelo resultante. Escolha um conjunto de dados adequado para a análise de regressão e explore os resultados do modelo para obter insights relevantes.

```         
RCopy code
```

`# Exemplo prático de modelagem com regressão linear # (Insira aqui o código e a descrição do conjunto de dados utilizado)`

Nesta parte da aula, aprendemos sobre a regressão linear simples, uma técnica para modelar a relação entre duas variáveis quantitativas, e o coeficiente de correlação, que quantifica a intensidade dessa relação. Além disso, discutimos a interpretação dos resultados da regressão e a importância de aplicar a modelagem em conjuntos de dados reais para obter insights valiosos. A modelagem é uma ferramenta poderosa que pode ser usada para previsões e tomada de decisões informadas.

# Lista de exercícios

## Resolução de problemas práticos utilizando R

1.  Baixe um conjunto de dados de sua escolha (pode ser de um repositório público ou uma planilha própria) e importe-o para o R.

2.  Realize a limpeza e pré-processamento dos dados, tratando valores ausentes e realizando transformações necessárias.

3.  Crie diferentes tipos de gráficos (scatter plot, line plot, bar plot, pie plot, box plot) para explorar visualmente as relações e tendências dos dados.

4.  Calcule a média, mediana, moda, desvio padrão e variância das variáveis quantitativas do conjunto de dados.

5.  Calcule o coeficiente de correlação entre pares de variáveis quantitativas para identificar possíveis relações lineares.

## Aplicação dos conhecimentos adquiridos em visualização e modelagem

1.  Escolha duas variáveis quantitativas do conjunto de dados utilizado anteriormente e crie um scatter plot para visualizar sua relação.

2.  Realize uma regressão linear simples entre essas duas variáveis e interprete os resultados obtidos, considerando o valor do coeficiente de correlação.

3.  Explore diferentes técnicas de visualização para representar os resultados da regressão (pode utilizar bibliotecas como ggplot2).

4.  Identifique possíveis outliers no conjunto de dados e analise como eles afetam a regressão e a relação entre as variáveis.

5.  Utilize o intervalo de confiança para a média de uma variável quantitativa do conjunto de dados e interprete-o em termos do contexto do problema.

6.  Formule uma hipótese relacionada a uma das variáveis do conjunto de dados e realize um teste de hipóteses para verificar sua validade.
